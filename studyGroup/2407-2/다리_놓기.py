"""
0.5초 (50,000,000) : N,M은 0 ~ 30
N을 기준으로 일직선으로만 뻗을 수 있어서 전 단계의 n이 뻗은 m 이상에서만 가능하다.
최소 N개 이상의 다리가 세워졌을 때는 하나의 경우의 수로 본다.

=> M에서 N을 뽑는다는 관점에서 조합공식 사용 M! / N!(M-N)!
결국 조합론을 사용해서 팩토리얼을 dp로 구현해서 문제 해결 가능
"""

dp = [0] * 31 # 사이트의 최대 개수가 30이므로 해당 범위로 설정
# 초기화
dp[0] = 1 # 0은 자연수가 아니므로 임의로 팩토리얼 결과로 1을 지정한다.
dp[1] = 1

T = int(input())
for _ in range(T):
    N,M = map(int,input().split())
    # dp 채우기
    for i in range(1,M):
        if not dp[i+1]:
            dp[i+1] = dp[i] * (i+1)

    result = dp[M] / (dp[(M-N)] * dp[N])

    print(int(result))